when we create image ->  when we don't find image on docker hub
in this case, we need to containerize an app i.e simple web app build flask
To deploy application manually, steps to taken care of:
  Create my own image for single web application
	1. operation sysytem - (ex- ubuntu)
        2. Update apt repo - (update source repo)
        3. Install dependencies using apt
	4. Install python dependencies using pip
	5. Copy source code ro /opt folder
	6. run web server usinf flask command
Need to create docker file using this:
    Dockerfile
        FROM Ubuntu
        RUN apt-get update && apt-get -y install python
        RUN pip install flask flask-mysql
        COPY ./opt/source-code
        ENTRYPOINT FLASK_APP=/opt/source-code/app.py flask run
Once done build your image using build command
	docker build . -f Dockefile -t mmumshad/my-custom-app
        this will create image locally on your system
        to make it available on public repo, run push command
        docker push image_name

When docker build images in layered architecture
each line of instrucution creates new line of layer
docker build. -f Dockerfile -t mumshad/my-custom-app
Layer 1: Base Ubuntu Layer 120mb
Layer 2: Changes in apt packages 300 mb
Layer 3: Changes in pip packages 6.3 mb
Layer 4: Source Code 229 b
Layer 5: Update Entrypoint with "flask" command 0 b

Lab - DockerImages
cd /root/webapp-color
cat /etc/*release* -  to check the os 
ls -li/a
nano to edit the file
add tag using ':'

Docker environment variables
	color = os.environ.get('APP_COLOR')
	export APP_COLOR=blue; python app.py 
	once this is docker image
    docker run -e APP_COLOR=blue
 	docker inspect and fing environment variables in config section
 docker run -p 38282:8080 --name blue-app -e APP_COLOR=blue kodekloud/simple-webapp

Docker Command, Arguments and Entrypoint
	In docker file, CMD["nginx"] - defind default command
we can run docker run ubuntu sleep 5 , but  we want it to be parmanent in that case
	dockerfile- ubuntu-sleeper
	FROM Ubuntu

	CMD sleep 5 or CMD["sleep","5"]
 
	now run docker run ubuntu-sleeper
Consider if we want to run for 10 instead of 5 so write cmd - docker run ubuntu-sleeper sleep 10
but this is not a good idea

now we only want to pass the no of sec
in that case we use Entrypoint

FROM Ubuntu
ENTRYPOINT["sleep"]
so now you can run docker run ubuntu-sleeper 10 

Incase of cmd if we pass sleep 10 in command so it will get replaced 5 by 10 and in entrypoint it will get append by 10

so if you have to pass default value and then append in that case

FROM Ubuntu
ENTRYPOINT["sleep"]
CMD["5"]

now if you didn't pass then it will sleep for 5 sec 
	docker run ubuntu-sleeper 10 -> in this case it will override 5 sec with 10 sec

In case we need to modify entrypoint at run time in that case
	docker run --entrypoint sleep2.0 ubuntu-sleeper 10
